//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.7

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "ingestion")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub substance_id: i32,
    pub dosage_unit: String,
    #[sea_orm(column_type = "Double")]
    pub dosage_value: f64,
    pub ingested_at: DateTimeWithTimeZone,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::substance::Entity",
        from = "Column::SubstanceId",
        to = "super::substance::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Substance,
}

impl Related<super::substance::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Substance.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
